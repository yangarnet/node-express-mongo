{"version":3,"sources":["../../src/schemas/contact.js"],"names":["Schema","contact","firstName","type","String","required","minlength","lastName","trim","email","maxlength","company","phone","Number","dateAdded","Date","default","now","ContactSchema"],"mappings":";;;;;;AAKA;;;;;;AACA,IAAMA,SAAS,mBAASA,MAAxB;AALA;AACA;;;;;AAMA,IAAMC,UAAU;AACZC,eAAW;AACPC,cAAMC,MADC;AAEPC,kBAAU,wBAFH;AAGPC,mBAAW;AAHJ,KADC;AAMZC,cAAU;AACNJ,cAAMC,MADA;AAENC,kBAAU,uBAFJ;AAGNC,mBAAW,CAHL;AAINE,cAAM;AAJA,KANE;AAYZC,WAAO;AACHN,cAAMC,MADH;AAEHE,mBAAW,CAFR;AAGHI,mBAAW,GAHR;AAIHL,kBAAU;AAJP,KAZK;AAkBZM,aAAS;AACLR,cAAMC,MADD;AAELI,cAAM;AAFD,KAlBG;AAsBZI,WAAO;AACHT,cAAMU;AADH,KAtBK;AAyBZC,eAAW;AACPX,cAAMY,IADC;AAEPC,iBAASD,KAAKE;AAFP;AAzBC,CAAhB;;AA+BA,IAAMC,gBAAgB,IAAIlB,MAAJ,CAAWC,OAAX,CAAtB;;kBAEeiB,a","file":"contact.js","sourcesContent":["\n// schema definition, then you can add methods to schema, finally compile model.\n/*\n  support types: String, Boolean, Number, Date, Array, Mixed, ObjectId\n*/\nimport mongoose from 'mongoose';\nconst Schema = mongoose.Schema;\n\nconst contact = {\n    firstName: {\n        type: String,\n        required: 'Ok, Enter a first Name',\n        minlength: 2\n    },\n    lastName: {\n        type: String,\n        required: 'Ok, Enter a last Name',\n        minlength: 2,\n        trim: true\n    },\n    email: {\n        type: String,\n        minlength: 5,\n        maxlength: 200,\n        required: 'OK, Enter a email addres'\n    },\n    company: {\n        type: String,\n        trim: true\n    },\n    phone: {\n        type: Number\n    },\n    dateAdded: {\n        type: Date,\n        default: Date.now\n    }\n};\n\nconst ContactSchema = new Schema(contact);\n\nexport default ContactSchema;\n"]}