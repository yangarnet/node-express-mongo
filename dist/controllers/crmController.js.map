{"version":3,"sources":["../../src/controllers/crmController.js"],"names":["addNewContact","req","res","newContact","body","print","save","then","json","resoponse","send","error","getContacts","find","err","contacts","getContactById","findById","params","contactId","contact","findContactWithSameFirstName","list","console","log","updateContactById","findOneAndUpdate","_id","new","status","deleteContactById","deleteOne"],"mappings":";;;;;;;AAAA;;;;;;AAEO,IAAMA,wCAAgB,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAc;;AAEvC;AACA,QAAIC,aAAa,2BAAiBF,IAAIG,IAArB,CAAjB;;AAEAD,eAAWE,KAAX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,eAAWG,IAAX,GAAkBC,IAAlB,CAAuB,qBAAa;AAChCL,YAAIM,IAAJ,CAASC,SAAT;AACH,KAFD,EAEG,iBAAS;AACRP,YAAIQ,IAAJ,CAASC,KAAT;AACH,KAJD;AAKH,CAnBM;;AAqBA,IAAMC,oCAAc,SAAdA,WAAc,CAACX,GAAD,EAAMC,GAAN,EAAc;AACrC;AACA;AACA;;AAEA,2BAAaW,IAAb,CAAkB,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACjC,YAAID,GAAJ,EAAS;AACLZ,gBAAIQ,IAAJ,CAASI,GAAT;AACH;AACDZ,YAAIM,IAAJ,CAASO,QAAT;AACH,KALD;AAMH,CAXM;;AAaA,IAAMC,0CAAiB,SAAjBA,cAAiB,CAACf,GAAD,EAAMC,GAAN,EAAc;AACxC,2BAAae,QAAb,CAAsBhB,IAAIiB,MAAJ,CAAWC,SAAjC,EAA4C,UAACL,GAAD,EAAMM,OAAN,EAAkB;AAC1D,YAAIN,GAAJ,EAAS;AACLZ,gBAAIQ,IAAJ,CAASI,GAAT;AACH;AACDM,gBAAQf,KAAR;AACAe,gBAAQC,4BAAR,CAAqC,UAACP,GAAD,EAAMQ,IAAN,EAAa;AAChD,gBAAGR,GAAH,EAAQ;AACNS,wBAAQC,GAAR,CAAY,uBAAZ;AACD;AACDD,oBAAQC,GAAR,CAAY,mCAAZ,EAAiDF,IAAjD;AACD,SALD;AAMApB,YAAIM,IAAJ,CAASY,OAAT;AACH,KAZD;AAaH,CAdM;;AAgBA,IAAMK,gDAAoB,SAApBA,iBAAoB,CAACxB,GAAD,EAAMC,GAAN,EAAc;AAC3C,2BAAawB,gBAAb,CACI,EAAEC,KAAK1B,IAAIiB,MAAJ,CAAWC,SAAlB,EADJ,EACmClB,IAAIG,IADvC,EAC6C,EAACwB,KAAK,IAAN,EAD7C,EAEI,UAACd,GAAD,EAAMM,OAAN,EAAkB;AACd,YAAIN,GAAJ,EAAS;AACLZ,gBAAIQ,IAAJ,CAASI,GAAT;AACH;AACDZ,YAAIM,IAAJ,CAASY,UAAUA,OAAV,GAAoB,EAACS,4CAA2C5B,IAAIiB,MAAJ,CAAWC,SAAvD,EAA7B;AACH,KAPL;AASH,CAVM;;AAYA,IAAMW,gDAAoB,SAApBA,iBAAoB,CAAC7B,GAAD,EAAMC,GAAN,EAAc;AAC3C,2BAAa6B,SAAb,CAAuB,EAACJ,KAAI1B,IAAIiB,MAAJ,CAAWC,SAAhB,EAAvB,EAAmD,UAACL,GAAD,EAAMM,OAAN,EAAkB;AACjE,YAAIN,GAAJ,EAAS;AACLZ,gBAAIQ,IAAJ,CAASI,GAAT;AACH;AACDZ,YAAIM,IAAJ,CAAS,EAAEqB,6CAA4C5B,IAAIiB,MAAJ,CAAWC,SAAzD,EAAT;AACH,KALD;AAMH,CAPM","file":"crmController.js","sourcesContent":["import contactModel from '../models/ContactModel';\n\nexport const addNewContact = (req, res) => {\n    \n    // create a new document from the model by passing req.body\n    let newContact = new contactModel(req.body);\n\n    newContact.print();\n    // call instance save method\n    // newContact.save((err, contact) => {\n    //     if (err) {\n    //         res.send(err);\n    //     }\n    //     // response the newly added contact\n    //     res.json(contact);\n    // });\n    newContact.save().then(resoponse => {\n        res.json(resoponse);\n    }, error => {\n        res.send(error);\n    });\n};\n\nexport const getContacts = (req, res) => {\n    // using Model to findout all documents.\n    // you can search the model with schema keywords.\n    // ContactModel.find({ firstName: 'sdfgsdfgsdfg' },(err, contacts) =>{});\n\n    contactModel.find((err, contacts) => {\n        if (err) {\n            res.send(err);\n        }\n        res.json(contacts);\n    });\n};\n\nexport const getContactById = (req, res) => {\n    contactModel.findById(req.params.contactId, (err, contact) => {\n        if (err) {\n            res.send(err);\n        }\n        contact.print();\n        contact.findContactWithSameFirstName((err, list)=>{\n          if(err) {\n            console.log('error in finding.....');\n          }\n          console.log('find conacts with same firstname:', list);\n        });\n        res.json(contact);\n    });\n};\n\nexport const updateContactById = (req, res) => {\n    contactModel.findOneAndUpdate(\n        { _id: req.params.contactId }, req.body, {new: true},\n        (err, contact) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(contact ? contact : {status : `[ERROR]:no such entity with id ${req.params.contactId}`});\n        }\n    );\n};\n\nexport const deleteContactById = (req, res) => {\n    contactModel.deleteOne({_id:req.params.contactId}, (err, contact) => {\n        if (err) {\n            res.send(err);\n        }\n        res.json({ status : `Successful delete entry with id ${req.params.contactId}`});\n    });\n};\n"]}