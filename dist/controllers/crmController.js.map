{"version":3,"sources":["../../src/controllers/crmController.js"],"names":["addNewContact","req","res","newContact","body","print","save","err","contact","send","json","getContacts","find","contacts","getContactById","findById","params","contactId","findContactWithSameFirstName","list","console","log","updateContactById","findOneAndUpdate","_id","new","status","deleteContactById","deleteOne"],"mappings":";;;;;;;AAAA;;;;;;AAEO,IAAMA,wCAAgB,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACvC;AACA,QAAIC,aAAa,uBAAiBF,IAAIG,IAArB,CAAjB;;AAEAD,eAAWE,KAAX;AACA;AACAF,eAAWG,IAAX,CAAgB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC9B,YAAID,GAAJ,EAAS;AACLL,gBAAIO,IAAJ,CAASF,GAAT;AACH;AACD;AACAL,YAAIQ,IAAJ,CAASF,OAAT;AACH,KAND;AAOH,CAbM;;AAeA,IAAMG,oCAAc,SAAdA,WAAc,CAACV,GAAD,EAAMC,GAAN,EAAc;AACrC;AACA;AACA;;AAEA,uBAAaU,IAAb,CAAkB,UAACL,GAAD,EAAMM,QAAN,EAAmB;AACjC,YAAIN,GAAJ,EAAS;AACLL,gBAAIO,IAAJ,CAASF,GAAT;AACH;AACDL,YAAIQ,IAAJ,CAASG,QAAT;AACH,KALD;AAMH,CAXM;;AAaA,IAAMC,0CAAiB,SAAjBA,cAAiB,CAACb,GAAD,EAAMC,GAAN,EAAc;AACxC,uBAAaa,QAAb,CAAsBd,IAAIe,MAAJ,CAAWC,SAAjC,EAA4C,UAACV,GAAD,EAAMC,OAAN,EAAkB;AAC1D,YAAID,GAAJ,EAAS;AACLL,gBAAIO,IAAJ,CAASF,GAAT;AACH;AACDC,gBAAQH,KAAR;AACAG,gBAAQU,4BAAR,CAAqC,UAACX,GAAD,EAAMY,IAAN,EAAa;AAChD,gBAAGZ,GAAH,EAAQ;AACNa,wBAAQC,GAAR,CAAY,uBAAZ;AACD;AACDD,oBAAQC,GAAR,CAAY,mCAAZ,EAAiDF,IAAjD;AACD,SALD;AAMAjB,YAAIQ,IAAJ,CAASF,OAAT;AACH,KAZD;AAaH,CAdM;;AAgBA,IAAMc,gDAAoB,SAApBA,iBAAoB,CAACrB,GAAD,EAAMC,GAAN,EAAc;AAC3C,uBAAaqB,gBAAb,CACI,EAAEC,KAAKvB,IAAIe,MAAJ,CAAWC,SAAlB,EADJ,EACmChB,IAAIG,IADvC,EAC6C,EAACqB,KAAK,IAAN,EAD7C,EAEI,UAAClB,GAAD,EAAMC,OAAN,EAAkB;AACd,YAAID,GAAJ,EAAS;AACLL,gBAAIO,IAAJ,CAASF,GAAT;AACH;AACDL,YAAIQ,IAAJ,CAASF,UAAUA,OAAV,GAAoB,EAACkB,4CAA2CzB,IAAIe,MAAJ,CAAWC,SAAvD,EAA7B;AACH,KAPL;AASH,CAVM;;AAYA,IAAMU,gDAAoB,SAApBA,iBAAoB,CAAC1B,GAAD,EAAMC,GAAN,EAAc;AAC3C,uBAAa0B,SAAb,CAAuB,EAACJ,KAAIvB,IAAIe,MAAJ,CAAWC,SAAhB,EAAvB,EAAmD,UAACV,GAAD,EAAMC,OAAN,EAAkB;AACjE,YAAID,GAAJ,EAAS;AACLL,gBAAIO,IAAJ,CAASF,GAAT;AACH;AACDL,YAAIQ,IAAJ,CAAS,EAAEgB,6CAA4CzB,IAAIe,MAAJ,CAAWC,SAAzD,EAAT;AACH,KALD;AAMH,CAPM","file":"crmController.js","sourcesContent":["import ContactModel from '../model/crmModel';\n\nexport const addNewContact = (req, res) => {\n    // create one document\n    let newContact = new ContactModel(req.body);\n\n    newContact.print();\n    // call instance save method\n    newContact.save((err, contact) => {\n        if (err) {\n            res.send(err);\n        }\n        // response the newly added contact\n        res.json(contact);\n    });\n};\n\nexport const getContacts = (req, res) => {\n    // using Model to findout all documents.\n    // you can search the model with schema keywords.\n    // ContactModel.find({ firstName: 'sdfgsdfgsdfg' },(err, contacts) =>{});\n\n    ContactModel.find((err, contacts) => {\n        if (err) {\n            res.send(err);\n        }\n        res.json(contacts);\n    });\n};\n\nexport const getContactById = (req, res) => {\n    ContactModel.findById(req.params.contactId, (err, contact) => {\n        if (err) {\n            res.send(err);\n        }\n        contact.print();\n        contact.findContactWithSameFirstName((err, list)=>{\n          if(err) {\n            console.log('error in finding.....');\n          }\n          console.log('find conacts with same firstname:', list);\n        });\n        res.json(contact);\n    });\n};\n\nexport const updateContactById = (req, res) => {\n    ContactModel.findOneAndUpdate(\n        { _id: req.params.contactId }, req.body, {new: true},\n        (err, contact) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(contact ? contact : {status : `[ERROR]:no such entity with id ${req.params.contactId}`});\n        }\n    );\n};\n\nexport const deleteContactById = (req, res) => {\n    ContactModel.deleteOne({_id:req.params.contactId}, (err, contact) => {\n        if (err) {\n            res.send(err);\n        }\n        res.json({ status : `Successful delete entry with id ${req.params.contactId}`});\n    });\n};\n"]}