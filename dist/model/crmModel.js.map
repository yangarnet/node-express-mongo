{"version":3,"sources":["../../src/model/crmModel.js"],"names":["Schema","ContactSchema","firstName","type","String","required","lastName","email","minlength","maxlength","company","phone","Number","dateAdded","Date","default","now","methods","print","console","log","findContactWithSameFirstName","cb","model","find","ContactModel"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,SAAS,mBAASA,MAAxB;;AAEA;AACA;;;AAGA,IAAMC,gBAAgB,IAAID,MAAJ,CAAW;AAC7BE,eAAW;AACPC,cAAMC,MADC;AAEPC,kBAAU;AAFH,KADkB;AAK7BC,cAAU;AACNH,cAAMC,MADA;AAENC,kBAAU;AAFJ,KALmB;AAS7BE,WAAO;AACHJ,cAAMC,MADH;AAEHI,mBAAW,CAFR;AAGHC,mBAAW,GAHR;AAIHJ,kBAAU;AAJP,KATsB;AAe7BK,aAAS;AACLP,cAAMC;AADD,KAfoB;AAkB7BO,WAAO;AACHR,cAAMS;AADH,KAlBsB;AAqB7BC,eAAW;AACPV,cAAMW,IADC;AAEPC,iBAASD,KAAKE;AAFP;AArBkB,CAAX,CAAtB;AA0BA;AACA;AACA;AACAf,cAAcgB,OAAd,CAAsBC,KAAtB,GAA8B,YAAW;AACvCC,YAAQC,GAAR,yCAAkD,KAAKlB,SAAvD,iBAA4E,KAAKK,KAAjF;AACD,CAFD;AAGAN,cAAcgB,OAAd,CAAsBI,4BAAtB,GAAqD,UAASC,EAAT,EAAa;AAChE,WAAO,KAAKC,KAAL,CAAW,WAAX,EAAwBC,IAAxB,CAA6B,EAACtB,WAAW,KAAKA,SAAjB,EAA7B,EAA0DoB,EAA1D,CAAP;AACD,CAFD;;AAKA;AACA;AACA,IAAMG,eAAe,mBAASF,KAAT,CAAe,WAAf,EAA4BtB,aAA5B,CAArB;;kBAEewB,Y","file":"crmModel.js","sourcesContent":["import mongoose from 'mongoose';\nconst Schema = mongoose.Schema;\n\n// schema definition, then you can add methods to schema, finally compile model.\n/*\n  support types: String, Boolean, Number, Date, Array, Mixed, ObjectId\n*/\nconst ContactSchema = new Schema({\n    firstName: {\n        type: String,\n        required: 'Enter a first Name'\n    },\n    lastName: {\n        type: String,\n        required: 'Enter a last Name'\n    },\n    email: {\n        type: String,\n        minlength: 5,\n        maxlength: 200,\n        required: 'Enter a email addres'\n    },\n    company: {\n        type: String\n    },\n    phone: {\n        type: Number\n    },\n    dateAdded: {\n        type: Date,\n        default: Date.now\n    }\n});\n// now you can add new methods to you schema.\n// NOTE: methods must be added to the schema before compiling it with mongoose.model()\n// add instance method\nContactSchema.methods.print = function() {\n  console.log(`ContactSchema.methods : firstName: ${this.firstName} + email:${this.email}`);\n};\nContactSchema.methods.findContactWithSameFirstName = function(cb) {\n  return this.model('myContact').find({firstName: this.firstName}, cb)\n};\n\n\n// now, compiling the schema into the model used by ctrl, herre 'contact' will be\n// the collection name in mongodb, will use ContactModel to interact in controllers.\nconst ContactModel = mongoose.model('myContact', ContactSchema);\n\nexport default ContactModel;\n"]}